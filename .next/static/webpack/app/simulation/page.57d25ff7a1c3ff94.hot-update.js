"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/simulation/page",{

/***/ "(app-pages-browser)/./src/app/simulation/page.tsx":
/*!*************************************!*\
  !*** ./src/app/simulation/page.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Simulation; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dynamic */ \"(app-pages-browser)/./node_modules/next/dist/api/app-dynamic.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_chartjs_2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-chartjs-2 */ \"(app-pages-browser)/./node_modules/react-chartjs-2/dist/index.js\");\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! chart.js */ \"(app-pages-browser)/./node_modules/chart.js/dist/chart.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n// Dynamically load react-p5 since p5.js relies on browser-specific features\nconst Sketch = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_react-p5_build_index_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! react-p5 */ \"(app-pages-browser)/./node_modules/react-p5/build/index.js\", 23)).then((mod)=>mod.default), {\n    loadableGenerated: {\n        modules: [\n            \"app/simulation/page.tsx -> \" + \"react-p5\"\n        ]\n    },\n    ssr: false\n});\n_c = Sketch;\n// Register Chart.js components\nchart_js__WEBPACK_IMPORTED_MODULE_4__.Chart.register(chart_js__WEBPACK_IMPORTED_MODULE_4__.LineElement, chart_js__WEBPACK_IMPORTED_MODULE_4__.CategoryScale, chart_js__WEBPACK_IMPORTED_MODULE_4__.LinearScale, chart_js__WEBPACK_IMPORTED_MODULE_4__.PointElement);\nfunction Simulation() {\n    _s();\n    const searchParams = (0,next_navigation__WEBPACK_IMPORTED_MODULE_1__.useSearchParams)();\n    const vaccineEfficacy = parseFloat(searchParams.get(\"vaccineEfficacy\") || \"0.8\");\n    const populationVaccinated = parseFloat(searchParams.get(\"populationVaccinated\") || \"0.7\");\n    const infectionProbability = parseFloat(searchParams.get(\"infectionProbability\") || \"0.5\");\n    const vaccinatedRecoveryRate = parseFloat(searchParams.get(\"vaccinatedRecoveryRate\") || \"0.5\");\n    const unvaccinatedRecoveryRate = parseFloat(searchParams.get(\"unvaccinatedRecoveryRate\") || \"0.1\");\n    const peakInfectionDay = parseInt(searchParams.get(\"peakInfectionDay\") || \"5\");\n    const totalDays = parseInt(searchParams.get(\"totalDays\") || \"30\");\n    const populationSize = parseInt(searchParams.get(\"populationSize\") || \"1000\");\n    // Population array managed outside of React state for performance\n    const [people, setPeople] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)([]);\n    //const populationSize = 100;\n    const p5Instance = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null); // Reference to p5.js instance\n    // Simulation speed control\n    const [speed, setSpeed] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(1); // 1x speed by default\n    // Chart data\n    const [chartData, setChartData] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)({\n        labels: [],\n        datasets: [\n            {\n                label: \"Healthy\",\n                data: [],\n                borderColor: \"blue\",\n                fill: false\n            },\n            {\n                label: \"Infected\",\n                data: [],\n                borderColor: \"red\",\n                fill: false\n            },\n            {\n                label: \"Recovered\",\n                data: [],\n                borderColor: \"green\",\n                fill: false\n            }\n        ]\n    });\n    const frameCount = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(0); // Keep track of the simulation frames\n    // Person object representing each individual in the population\n    class Person {\n        // Determine if a person can get infected\n        tryToInfect(p5, infectionRadius) {\n            if (this.status === \"healthy\") {\n                for (let other of people){\n                    if (other.status === \"infected\") {\n                        // Check if this person is within infection radius\n                        let d = p5.dist(this.x, this.y, other.x, other.y);\n                        if (d < infectionRadius) {\n                            // Check vaccination status and infection probability\n                            if (!this.vaccinated || Math.random() > vaccineEfficacy) {\n                                // Random chance of infection\n                                if (Math.random() < infectionProbability) {\n                                    this.status = \"infected\"; // This person gets infected\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        move(p5) {\n            this.x += p5.random(-5, 5); // Increased movement\n            this.y += p5.random(-5, 5);\n            this.x = p5.constrain(this.x, 0, p5.width);\n            this.y = p5.constrain(this.y, 0, p5.height);\n        }\n        show(p5) {\n            if (this.status === \"healthy\") {\n                p5.fill(100, 200, 255); // blue for healthy\n            } else if (this.status === \"infected\") {\n                p5.fill(255, 100, 100); // red for infected\n            } else if (this.status === \"recovered\") {\n                p5.fill(0, 255, 0); // green for recovered\n            }\n            p5.ellipse(this.x, this.y, 20, 20);\n        }\n        // recover() {\n        //   if (this.status === \"infected\" && Math.random() < 0.01) {\n        //     this.status = \"recovered\";\n        //   }\n        // }\n        // new recover function needed\n        recover() {\n            if (this.status === \"infected\") {\n                const recoveryChance = this.vaccinated ? vaccinatedRecoveryRate : unvaccinatedRecoveryRate;\n                if (Math.random() < recoveryChance) {\n                    this.status = \"recovered\";\n                }\n            }\n        }\n        constructor(x, y, vaccinated, status = \"healthy\"){\n            this.x = x;\n            this.y = y;\n            this.vaccinated = vaccinated;\n            this.status = status;\n        }\n    }\n    // Initialize population once in useEffect\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        if (people.length === 0) {\n            const newPeople = [];\n            for(let i = 0; i < populationSize; i++){\n                let x = Math.random() * 800;\n                let y = Math.random() * 600;\n                let vaccinated = Math.random() < populationVaccinated;\n                newPeople.push(new Person(x, y, vaccinated));\n            }\n            for(let i = 0; i < 50; i++){\n                newPeople[i].status = \"infected\"; // setting to infected from start\n            }\n            setPeople(newPeople);\n        }\n    }, []); // Empty dependency array ensures people are initialized only once\n    // Function to update chart data\n    const updateChartData = (healthy, infected, recovered, frame)=>{\n        setChartData((prevData)=>({\n                labels: [\n                    ...prevData.labels,\n                    frame\n                ],\n                datasets: [\n                    {\n                        ...prevData.datasets[0],\n                        data: [\n                            ...prevData.datasets[0].data,\n                            healthy\n                        ]\n                    },\n                    {\n                        ...prevData.datasets[1],\n                        data: [\n                            ...prevData.datasets[1].data,\n                            infected\n                        ]\n                    },\n                    {\n                        ...prevData.datasets[2],\n                        data: [\n                            ...prevData.datasets[2].data,\n                            recovered\n                        ]\n                    }\n                ]\n            }));\n    };\n    // p5.js setup and draw functions\n    const setup = (p5, canvasParentRef)=>{\n        p5.createCanvas(800, 600).parent(canvasParentRef);\n        p5Instance.current = p5; // Save p5.js instance for future reference\n        p5.frameRate(30); // Set default frame rate\n    };\n    const draw = (p5)=>{\n        p5.background(255);\n        let healthyCount = 0;\n        let infectedCount = 0;\n        let recoveredCount = 0;\n        // Render and update each person\n        people.forEach((person)=>{\n            person.move(p5);\n            person.show(p5);\n            person.tryToInfect(p5, 50); // Infection radius is 50 pixels\n            person.recover();\n            // Count people by their status\n            if (person.status === \"healthy\") healthyCount++;\n            if (person.status === \"infected\") infectedCount++;\n            if (person.status === \"recovered\") recoveredCount++;\n        });\n        if (frameCount.current > totalDays * 30) {\n            p5.noLoop();\n        }\n        // Update the chart every frame\n        frameCount.current++;\n        updateChartData(healthyCount, infectedCount, recoveredCount, frameCount.current);\n    };\n    // Handle speed changes using p5's frameRate()\n    const handleSpeedChange = ()=>{\n        if (speed === 1) {\n            setSpeed(2); // Speed up to 2x\n            p5Instance.current.frameRate(60); // Double the frame rate for 2x speed\n        } else if (speed === 2) {\n            setSpeed(4); // Speed up to 4x\n            p5Instance.current.frameRate(120); // Quadruple the frame rate for 4x speed\n        } else {\n            setSpeed(1); // Reset to 1x speed\n            p5Instance.current.frameRate(30); // Default frame rate\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            display: \"flex\",\n            gap: \"20px\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        children: \"Flu Simulation\"\n                    }, void 0, false, {\n                        fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                        lineNumber: 269,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Vaccine Efficacy: \",\n                            Math.round(vaccineEfficacy * 100),\n                            \"%\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                        lineNumber: 270,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Population Vaccinated: \",\n                            Math.round(populationVaccinated * 100),\n                            \"%\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                        lineNumber: 271,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Infection Probability: \",\n                            Math.round(infectionProbability * 100),\n                            \"%\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                        lineNumber: 272,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \" \",\n                            \"Vaccinated Recovery Rate: \",\n                            Math.round(vaccinatedRecoveryRate * 100),\n                            \"%\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                        lineNumber: 273,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Unvaccinated Recovery Rate:\",\n                            \" \",\n                            Math.round(unvaccinatedRecoveryRate * 100),\n                            \"%\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                        lineNumber: 277,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Peak Infection Day: \",\n                            peakInfectionDay\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                        lineNumber: 281,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Total Days: \",\n                            totalDays\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                        lineNumber: 282,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Population Size: \",\n                            populationSize\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                        lineNumber: 283,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: handleSpeedChange,\n                        children: speed === 1 ? \"Speed Up (2x)\" : speed === 2 ? \"Speed Up (4x)\" : \"Reset Speed (1x)\"\n                    }, void 0, false, {\n                        fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                        lineNumber: 285,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Sketch, {\n                        setup: setup,\n                        draw: draw\n                    }, void 0, false, {\n                        fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                        lineNumber: 293,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                lineNumber: 268,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    width: \"400px\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        children: \"Status Over Time\"\n                    }, void 0, false, {\n                        fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                        lineNumber: 298,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_chartjs_2__WEBPACK_IMPORTED_MODULE_5__.Line, {\n                        data: chartData\n                    }, void 0, false, {\n                        fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                        lineNumber: 299,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n                lineNumber: 297,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/kota/Documents/FluFlighters/src/app/simulation/page.tsx\",\n        lineNumber: 266,\n        columnNumber: 5\n    }, this);\n} //-------------------\n // \"use client\";\n // import { useSearchParams } from \"next/navigation\";\n // import dynamic from \"next/dynamic\";\n // import { useEffect, useRef, useState } from \"react\";\n // import { Line } from \"react-chartjs-2\";\n // import {\n //   Chart as ChartJS,\n //   LineElement,\n //   CategoryScale,\n //   LinearScale,\n //   PointElement,\n // } from \"chart.js\";\n // import Modal from 'react-modal';\n // // Dynamically load react-p5 since p5.js relies on browser-specific features\n // const Sketch = dynamic(() => import(\"react-p5\").then((mod) => mod.default), {\n //   ssr: false,\n // });\n // // Register Chart.js components\n // ChartJS.register(LineElement, CategoryScale, LinearScale, PointElement);\n // // Define chart data type\n // type ChartData = {\n //   labels: number[];\n //   datasets: {\n //     label: string;\n //     data: number[];\n //     borderColor: string;\n //     fill: boolean;\n //     borderDash?: number[];\n //   }[];\n // };\n // export default function Simulation() {\n //   const [showModal, setShowModal] = useState(false);\n //   const [graphs, setGraphs] = useState([]);\n //   const searchParams = useSearchParams();\n //   const addNewGraph = (newParams)=> {\n //     const newGraphData = runSimulation(newParams);\n //     setGraphs([...graphs, newGraphData]);\n //     setShowModal(false);\n //   }\n //   // Extract parameters from URL\n //   const vaccineEfficacy = parseFloat(\n //     searchParams.get(\"vaccineEfficacy\") || \"0.8\"\n //   );\n //   const populationVaccinated = parseFloat(\n //     searchParams.get(\"populationVaccinated\") || \"0.7\"\n //   );\n //   const infectionProbability = parseFloat(\n //     searchParams.get(\"infectionProbability\") || \"0.5\"\n //   );\n //   const vaccinatedRecoveryRate = parseFloat(\n //     searchParams.get(\"vaccinatedRecoveryRate\") || \"0.5\"\n //   );\n //   const unvaccinatedRecoveryRate = parseFloat(\n //     searchParams.get(\"unvaccinatedRecoveryRate\") || \"0.1\"\n //   );\n //   const peakInfectionDay = parseInt(\n //     searchParams.get(\"peakInfectionDay\") || \"5\"\n //   );\n //   const totalDays = parseInt(searchParams.get(\"totalDays\") || \"30\");\n //   const populationSize = parseInt(searchParams.get(\"populationSize\") || \"100\");\n //   // State for simulation data\n //   const [days, setDays] = useState<number[]>([]);\n //   const [susceptiblePopulation, setSusceptiblePopulation] = useState<number[]>(\n //     []\n //   );\n //   const [infectedPopulation, setInfectedPopulation] = useState<number[]>([]);\n //   const [recoveredVaccinated, setRecoveredVaccinated] = useState<number[]>([]);\n //   const [recoveredUnvaccinated, setRecoveredUnvaccinated] = useState<number[]>(\n //     []\n //   );\n //   const [totalRecoveredPopulation, setTotalRecoveredPopulation] = useState<\n //     number[]\n //   >([]);\n //   const [speed, setSpeed] = useState(1); // 1x speed by default\n //   const p5Instance = useRef<any>(null); // Reference to p5.js instance\n //   // Chart data\n //   const [chartData, setChartData] = useState<ChartData>({\n //     labels: [], // Frame count (or time steps)\n //     datasets: [\n //       {\n //         label: \"Susceptible\",\n //         data: [],\n //         borderColor: \"orange\",\n //         fill: false,\n //       },\n //       {\n //         label: \"Infected\",\n //         data: [],\n //         borderColor: \"red\",\n //         fill: false,\n //       },\n //       {\n //         label: \"Total Recovered\",\n //         data: [],\n //         borderColor: \"green\",\n //         fill: false,\n //       },\n //       {\n //         label: \"Recovered Vaccinated\",\n //         data: [],\n //         borderColor: \"blue\",\n //         borderDash: [5, 5],\n //         fill: false,\n //       },\n //       {\n //         label: \"Recovered Unvaccinated\",\n //         data: [],\n //         borderColor: \"purple\",\n //         borderDash: [5, 5],\n //         fill: false,\n //       },\n //     ],\n //   });\n //   // Initialize and calculate flu model data\n //   useEffect(() => {\n //     const daysArray = Array.from(\n //       { length: 100 },\n //       (_, i) => (i / 100) * totalDays\n //     );\n //     setDays(daysArray);\n //     const vaccinatedPopulation = populationSize * populationVaccinated;\n //     const unvaccinatedPopulation = populationSize * (1 - populationVaccinated);\n //     // Calculate recovered population\n //     const recoveredVaccinatedArray = daysArray.map(\n //       (day) =>\n //         (1 / (1 + Math.exp(-vaccinatedRecoveryRate * (day - totalDays / 2)))) *\n //         vaccinatedPopulation\n //     );\n //     const recoveredUnvaccinatedArray = daysArray.map(\n //       (day) =>\n //         (1 /\n //           (1 + Math.exp(-unvaccinatedRecoveryRate * (day - totalDays / 2)))) *\n //         unvaccinatedPopulation\n //     );\n //     const infectedArray = daysArray.map(\n //       (day) =>\n //         Math.exp(-infectionProbability * (day - peakInfectionDay) ** 2) *\n //         populationSize\n //     );\n //     const recoveredArray = recoveredVaccinatedArray.map(\n //       (rv, i) => rv + recoveredUnvaccinatedArray[i]\n //     );\n //     const susceptibleArray = daysArray.map((_, i) => {\n //       const susceptibleValue =\n //         populationSize - (infectedArray[i] + recoveredArray[i]);\n //       return Math.max(susceptibleValue, 0); // Ensure no negative values\n //     });\n //     // Set calculated state variables\n //     setSusceptiblePopulation(susceptibleArray);\n //     setInfectedPopulation(infectedArray);\n //     setRecoveredVaccinated(recoveredVaccinatedArray);\n //     setRecoveredUnvaccinated(recoveredUnvaccinatedArray);\n //     setTotalRecoveredPopulation(recoveredArray);\n //   }, [\n //     infectionProbability,\n //     vaccinatedRecoveryRate,\n //     unvaccinatedRecoveryRate,\n //     populationVaccinated,\n //     peakInfectionDay,\n //     totalDays,\n //     populationSize,\n //   ]);\n //   // Update chart data when state changes\n //   useEffect(() => {\n //     setChartData({\n //       labels: days,\n //       datasets: [\n //         {\n //           label: \"Susceptible\",\n //           data: susceptiblePopulation,\n //           borderColor: \"orange\",\n //           fill: false,\n //         },\n //         {\n //           label: \"Infected\",\n //           data: infectedPopulation,\n //           borderColor: \"red\",\n //           fill: false,\n //         },\n //         {\n //           label: \"Total Recovered\",\n //           data: totalRecoveredPopulation,\n //           borderColor: \"green\",\n //           fill: false,\n //         },\n //         {\n //           label: \"Recovered Vaccinated\",\n //           data: recoveredVaccinated,\n //           borderColor: \"blue\",\n //           borderDash: [5, 5],\n //           fill: false,\n //         },\n //         {\n //           label: \"Recovered Unvaccinated\",\n //           data: recoveredUnvaccinated,\n //           borderColor: \"purple\",\n //           borderDash: [5, 5],\n //           fill: false,\n //         },\n //       ],\n //     });\n //   }, [\n //     days,\n //     susceptiblePopulation,\n //     infectedPopulation,\n //     totalRecoveredPopulation,\n //     recoveredVaccinated,\n //     recoveredUnvaccinated,\n //   ]);\n //   // p5.js setup and draw functions\n //   const setup = (p5: any, canvasParentRef: Element) => {\n //     p5.createCanvas(800, 600).parent(canvasParentRef);\n //     p5Instance.current = p5;\n //     p5.frameRate(30);\n //   };\n //   const draw = (p5: any) => {\n //     p5.background(255);\n //   };\n //   // Handle speed changes using p5's frameRate()\n //   const handleSpeedChange = () => {\n //     if (speed === 1) {\n //       setSpeed(2);\n //       p5Instance.current.frameRate(60);\n //     } else if (speed === 2) {\n //       setSpeed(4);\n //       p5Instance.current.frameRate(120);\n //     } else {\n //       setSpeed(1);\n //       p5Instance.current.frameRate(30);\n //     }\n //   };\n //   return (\n //     <div style={{ display: \"flex\", gap: \"20px\" }}>\n //       {/* Left: Simulation */}\n //       <div>\n //         <h2>Flu Simulation</h2>\n //         <p>Vaccine Efficacy: {Math.round(vaccineEfficacy * 100)}%</p>\n //         <p>Population Vaccinated: {Math.round(populationVaccinated * 100)}%</p>\n //         <p>Infection Probability: {Math.round(infectionProbability * 100)}%</p>\n //         <p>\n //           Vaccinated Recovery Rate: {Math.round(vaccinatedRecoveryRate * 100)}%\n //         </p>\n //         <p>\n //           Unvaccinated Recovery Rate:{\" \"}\n //           {Math.round(unvaccinatedRecoveryRate * 100)}%\n //         </p>\n //         <p>Peak Infection Day: {peakInfectionDay}</p>\n //         <p>Total Days: {totalDays}</p>\n //         <p>Population Size: {populationSize}</p>\n //         <button onClick={handleSpeedChange}>\n //           {speed === 1\n //             ? \"Speed Up (2x)\"\n //             : speed === 2\n //             ? \"Speed Up (4x)\"\n //             : \"Reset Speed (1x)\"}\n //         </button>\n //         <Sketch setup={setup} draw={draw} />\n //       </div>\n //       {/* Right: Line Graph */}\n //       <div style={{ width: \"400px\" }}>\n //         <h3>Status Over Time</h3>\n //         <Line data={chartData} />\n //       </div>\n //   <button onClick={() => setShowModal(true)}>Add New</button>\n //       {/* Modal for adding new graph */}\n //       <Modal isOpen={showModal} onRequestClose={() => setShowModal(false)}>\n //         <h2>Enter New Parameters</h2>\n //         <ParameterForm onSubmit={addNewGraph} closeModal={() => setShowModal(false)} />\n //       </Modal>\n //       {/* Display all graphs */}\n //       {graphs.map((graph, index) => (\n //         <div key={index}>\n //           <h3>Graph {index + 1}</h3>\n //           <Line data={graph} />\n //         </div>\n //       ))}\n //     </div>\n //   );\n // }\n_s(Simulation, \"2xhNTztj2xHNFMq6TkBqAsoHbHQ=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_1__.useSearchParams\n    ];\n});\n_c1 = Simulation;\nvar _c, _c1;\n$RefreshReg$(_c, \"Sketch\");\n$RefreshReg$(_c1, \"Simulation\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/simulation/page.tsx\n"));

/***/ })

});